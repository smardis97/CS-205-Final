PYGAME_WINDOW_WIDTH = 1280
PYGAME_WINDOW_DEPTH = 768

BOARD_FILE = "images/monopoly_768*768.png"
BOARD_CENTERED_X = (PYGAME_WINDOW_WIDTH - PYGAME_WINDOW_DEPTH) / 2

#
# Drawn Colors
#
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
LIGHT_GREEN = (47, 233, 33)
LIME_GREEN = (162, 255, 0)
GREEN = (0, 128, 0)
RED = (255, 19 , 0)
DARK_RED = (179, 0, 0)
LIGHT_BLUE = (30, 144, 255)
BLUE = (14, 50, 255)
PURPLE = (67, 1, 68)
LIGHT_PURPLE = (180, 41, 255)
ORANGE = (255, 98, 5)
BRIGHT_ORANGE = (255, 158, 48)
YELLOW = (247, 248, 6)
PINK = (255, 21, 188)

# Player colors are selected from:
COLOR_SELECT = [
    DARK_RED,
    GREEN,
    BLUE,
    LIGHT_PURPLE,
    BRIGHT_ORANGE,
    LIME_GREEN
]

# Property colors as the appear on the board.
PROPERTY_COLOR = {
    "Purple": PURPLE,
    "Light Blue": LIGHT_BLUE,
    "Pink": PINK,
    "Orange": ORANGE,
    "Red": RED,
    "Yellow": YELLOW,
    "Green": LIGHT_GREEN,
    "Blue": BLUE,
    "Railroad": BLACK,
    "Utility": WHITE
}

# Background color of the board.
BACKGROUND_GREEN = (224, 246, 234)

# number of square on the board.
TILE_LIMIT = 40

# all possible display state for the gui.
MENU_NONE = "NONE"
MENU_WAIT = "WAIT"
MENU_MAIN = "MAIN"
MENU_DICE = "DICE"
MENU_RESULT = "RESULT"
MENU_START = "START"
MENU_COLOR = "COLOR"
MENU_NAME = "NAME"
MENU_OPP_SEL = "OPPONENT"
MENU_BUY = "BUY"
MENU_OVER = "OVER"
MENU_AI_ROLL = "AI_ROLL"
MENU_AI_BUY = "AI_BUY"
MENU_END = "END"
MENU_AI_RENT = "AI_RENT"
MENU_PLR_AI = "PLR_RENT_AI"
MENU_SE_AI_RENT = "SE_AI_RENT"
MENU_SE_PLR_RENT = "SE_PLR_RENT"
MENU_SE_DICE = "SE_DICE"
MENU_SE_RESULT = "SE_RESULT"
MENU_DEBT = "DEBT"
MENU_CHANCE = "CHANCE"
MENU_COM_CH = "COM_CH"
MENU_AI_SELL = "AI_SELL"
MENU_JAIL = "JAIL"
MENU_OUT = "OUT"

# for drawing player avatars
PLAYER_GRAPHIC_RADIUS = 15
HUMAN_MARKER_RADIUS = 5
PLAYER_GRAPHIC_DIAMETER = 2 * PLAYER_GRAPHIC_RADIUS
PlAYER_TILE_OFFSET = 20

# for drawing tile details
OWNER_MARKER_RADIUS = 8
OWNER_MARKER_POSITION = (-10, -12)
HOUSE_MARKER_DIMENSIONS = (17, 17)
HOUSE_MARKER_TEXT_OFFSET = (5, 4)
HOUSE_MARKER_POSITION = (5, - HOUSE_MARKER_DIMENSIONS[1] - 5)
HOUSE_MARKER_TEXT_SIZE = 12

# for arranging elements on the left menu
LEFT_MENU_SEPARATION = 140
LEFT_MENU_MARGIN = 35
LEFT_MENU_OFFSET = (25, 25)
LEFT_MENU_TEXT_OFFSET = (35, - 13)
LEFT_MENU_TEXT_SIZE = 25
LEFT_MENU_SUBTEXT_SIZE = 20

# for arranging elements on the right menu
RIGHT_MENU_MARGIN = 45
RIGHT_MENU_PROP_MARGIN = 70
RIGHT_MENU_BUTTON_MARGIN = 25
RIGHT_MENU_OFFSET = (35, 25)
RIGHT_MENU_TEXT_OFFSET = (35, - 13)
RIGHT_MENU_TEXT_SIZE = 25
RIGHT_MENU_SUBTEXT_SIZE = 20
RIGHT_MENU_ICON_SIZE = (30, 30)

# number of distinct phases in a turn
TURN_STAGE_COUNT = 4

# dimensions for the main central menu
GUI_WINDOW_DIMENSIONS = (400, 500)
GUI_WINDOW_POSITION = (PYGAME_WINDOW_WIDTH / 2 - GUI_WINDOW_DIMENSIONS[0] / 2, PYGAME_WINDOW_DEPTH / 2 - GUI_WINDOW_DIMENSIONS[1] / 2)
GUI_WINDOW_COLOR = (205, 255, 220)
GUI_BORDER_WIDTH = 10

#
# Colors and Dimensions for MenuObjects
#
MENU_LABEL_SIZE = 40

BUTTON_DIMENSIONS = (150, 40)
BUTTON_COLOR = (220, 220, 220)
BUTTON_HIGHLIGHT = (150, 150, 150)
BUTTON_TEXT_COLOR = (0, 0, 0)
BUTTON_TEXT_SIZE = 20

TEXT_BOX_DIMENSIONS = (300, 60)
TEXT_BOX_COLOR = (140, 140, 140)
TEXT_BOX_HIGHLIGHT = (200, 200, 200)
TEXT_BOX_ACTIVE = (255, 255, 255)
TEXT_BOX_TEXT_COLOR = (0, 0, 0)
TEXT_BOX_TEXT_SIZE = 20

DICE_GRAPHIC_DIMENSIONS = (70, 70)
DICE_OFFSET = 75
DICE_GRAPHIC_COLOR = (255, 255, 255)
DICE_TEXT_COLOR = (0, 0, 0)
DICE_TEXT_SIZE = 50

# Approximate size of sqaures on the board.
TILE_LONG_AXIS = 103.
TILE_SHORT_AXIS = 62.25

# A list of pairs of coordinates for the top-left and bottom-right corner of each square.

# Go square
TILE_BOUNDS = [((PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X - TILE_LONG_AXIS, PYGAME_WINDOW_DEPTH - TILE_LONG_AXIS),
                (PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X, float(PYGAME_WINDOW_DEPTH)))]

# bottom nine squares
for i in range(9):
    TILE_BOUNDS.append(((PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X - TILE_LONG_AXIS - TILE_SHORT_AXIS - i * TILE_SHORT_AXIS, PYGAME_WINDOW_DEPTH - TILE_LONG_AXIS),
                        (PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X - TILE_LONG_AXIS - i * TILE_SHORT_AXIS, PYGAME_WINDOW_DEPTH)))

# Jail square
TILE_BOUNDS.append(((BOARD_CENTERED_X, PYGAME_WINDOW_DEPTH - TILE_LONG_AXIS),
                    (BOARD_CENTERED_X + TILE_LONG_AXIS, PYGAME_WINDOW_DEPTH)))

# left nine squares
for i in range(9):
    TILE_BOUNDS.append(((BOARD_CENTERED_X, PYGAME_WINDOW_DEPTH - TILE_LONG_AXIS - TILE_SHORT_AXIS - i * TILE_SHORT_AXIS),
                        (BOARD_CENTERED_X + TILE_LONG_AXIS, PYGAME_WINDOW_DEPTH - TILE_LONG_AXIS - i * TILE_SHORT_AXIS)))

# Free Parking square
TILE_BOUNDS.append(((BOARD_CENTERED_X, 0.),
                    (BOARD_CENTERED_X + TILE_LONG_AXIS, TILE_LONG_AXIS)))

# top nine sqaures
for i in range(9):
    TILE_BOUNDS.append(((BOARD_CENTERED_X + TILE_LONG_AXIS + i * TILE_SHORT_AXIS, 0.),
                        (BOARD_CENTERED_X + TILE_LONG_AXIS + TILE_SHORT_AXIS + i * TILE_SHORT_AXIS, TILE_LONG_AXIS)))

# Go To Jail square
TILE_BOUNDS.append(((PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X - TILE_LONG_AXIS, 0.),
                    (PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X, TILE_LONG_AXIS)))

# right nine squares
for i in range(9):
    TILE_BOUNDS.append(((PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X - TILE_LONG_AXIS, TILE_LONG_AXIS + i * TILE_SHORT_AXIS),
                        (PYGAME_WINDOW_WIDTH - BOARD_CENTERED_X, TILE_LONG_AXIS + TILE_SHORT_AXIS + i * TILE_SHORT_AXIS)))

